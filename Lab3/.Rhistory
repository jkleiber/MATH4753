getwd
getwd()
source('C:/Users/jklei/Desktop/MATH4573/firstprogram.R')
exit
source('C:/Users/jklei/Desktop/MATH4573/firstprogram.R')
source('C:/Users/jklei/Desktop/MATH4573/firstprogram.R')
getwd()
"what"
"what"
print(getwd())
print("yeet")
print(getwd())
print("yeet")
print(getwd())
print("yeet")
print
print
print
print(getwd())
install.packages(c("ggplot2", "knitr"))
install.packages(c("ggplot2", "knitr"))
getwd()
setwd("C:/Users/jklei/Google Drive/School/Fall 2019/MATH4573/Lab3")
getwd()
##############################################
spruce = read.csv("SPRUCE.csv")
head(spruce)
plot(HEAT~RATIO,bg="Blue",pch=21,ylim=c(0,max(HEAT)),xlim=c(0,3), data=fin.df)
# Or use
fin.df=read.table(file.choose(),header=TRUE,sep=",")
plot(HEAT~RATIO,bg="Blue",pch=21,ylim=c(0,max(HEAT)),xlim=c(0,3), data=fin.df)
#new plotting window
windows()
plot(HEAT~RATIO,bg="Blue",pch=21,ylim=c(0,max(HEAT)),xlim=c(0,3), data=fin.df)
# Task 3
# Plot the spruce tree data appropriately
plot(HEAT~RATIO, main = "Justin Kleiber's Spruce Scatter Plot", bg="Blue", pch=21, ylim=c(0,max(HEAT)), xlim=c(0,3), data=spruce)
# Task 3
# Plot the spruce tree data appropriately
plot(Height~BHDiameter, main = "Justin Kleiber's Spruce Scatter Plot", bg="Blue", pch=21, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
# Task 3
# Plot the spruce tree data appropriately
plot(Height~BHDiameter, main = "Justin Kleiber's Spruce Scatter Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
library(s20x)
layout(matrix(nrow = 3, ncol = 1))
trendscatter(Height~BHDiameter, f = 0.5, data = spruce)
trendscatter(Height~BHDiameter, f = 0.6, data = spruce)
trendscatter(Height~BHDiameter, f = 0.7, data = spruce)
library(s20x)
layout(matrix(1:3, nrow = 3, ncol = 1))
trendscatter(Height~BHDiameter, f = 0.5, data = spruce)
trendscatter(Height~BHDiameter, f = 0.6, data = spruce)
trendscatter(Height~BHDiameter, f = 0.7, data = spruce)
# Make a linear model of the spruce data
spruce.lm = lm(Height~BHDiameter, data = spruce)
plot(Height~BHDiameter, main = "Spruce Scatter Plot with Trendline", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
windows()
plot(Height~BHDiameter, main = "Spruce Scatter Plot with Trendline", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
g+ggtitle("HEAT Vs RATIO")
#Lets look at where the plots will go
layout.show(4)
#layout
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
#Lets look at where the plots will go
layout.show(4)
windows()
# Show four plots at once
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
layout.show(4)
yhat = fitted(spruce.lm)
# Find residual segments
with(spruce,{
segments(BHDiameter,Height,BHDiameter,yhat)
})
# Show the plot
plot(Height~BHDiameter, main = "RSS Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
windows()
# Show four plots at once
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
# Plot 1, the scatter plot with the fitted line
plot(Height~BHDiameter, main = "Plot with Fitted Line", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Plot 2, same as 1, but with RSS deviations
# Predict the values of height from diameter
yhat = fitted(spruce.lm)
# Find residual segments
with(spruce,{
segments(BHDiameter,Height,BHDiameter,yhat)
})
# Show the plot
plot(Height~BHDiameter, main = "RSS Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Plot 3, the mean sum of squares
layout.show(4)
windows()
# Show four plots at once
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
# Plot 1, the scatter plot with the fitted line
plot(Height~BHDiameter, main = "Plot with Fitted Line", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Plot 2, same as 1, but with RSS deviations
# Predict the values of height from diameter
yhat = fitted(spruce.lm)
# Find residual segments
with(spruce,{
segments(BHDiameter,Height,BHDiameter,yhat)
})
# Show the plot
plot(Height~BHDiameter, main = "RSS Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Plot 3, the mean sum of squares
layout.show(4)
# Task 4
windows()
# Show four plots at once
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
# Plot 1, the scatter plot with the fitted line
plot(Height~BHDiameter, main = "Plot with Fitted Line", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Plot 2, same as 1, but with RSS deviations
plot(Height~BHDiameter, main = "RSS Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Predict the values of height from diameter
yhat = fitted(spruce.lm)
# Find residual segments
with(spruce,{
segments(BHDiameter,Height,BHDiameter,yhat)
})
windows()
# Re-create the scatterplot and overlay the trendline on top of it
plot(Height~BHDiameter, main = "Spruce Scatter Plot with Trendline", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Task 4
windows()
# Show four plots at once
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
# Plot 1, the scatter plot with the fitted line
plot(Height~BHDiameter, main = "Plot with Fitted Line", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Plot 2, same as 1, but with RSS deviations
plot(Height~BHDiameter, main = "RSS Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Predict the values of height from diameter
yhat = fitted(spruce.lm)
# Find residual segments
with(spruce,{
segments(BHDiameter,Height,BHDiameter,yhat)
})
# Plot 3, the model sum of squares
plot(Height~BHDiameter, main = "MSS Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Make a naive model (the mean of heights)
with(spruce, abline(h=mean(Height)))
# Make the explained deviations (explained by the model)
with(fin.df, segments(BHDiameter,mean(Height),BHDiameter,yhat,col="Red"))
MSS=with(fin.df,sum((yhat-mean(Height))^2))
MSS
# Plot 4, the total sum of squares
plot(Height~BHDiameter, main = "Justin Kleiber's Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
# Show the naive model (the mean of heights)
with(spruce, abline(h=mean(Height)))
with(spruce, segments(BHDiameter,Height,BHDiameter,mean(Height),col="Green"))
TSS=with(spruce, sum((Height-mean(Height))^2))
TSS
plot(Height~BHDiameter, main = "MSS Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Make a naive model (the mean of heights)
with(spruce, abline(h=mean(Height)))
# Predict the values of height from diameter
yhat = fitted(spruce.lm)
# Make the explained deviations (explained by the model)
with(fin.df, segments(BHDiameter,mean(Height),BHDiameter,yhat,col="Red"))
MSS=with(fin.df,sum((yhat-mean(Height))^2))
MSS
windows()
# Show four plots at once
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
# Plot 1, the scatter plot with the fitted line
plot(Height~BHDiameter, main = "Plot with Fitted Line", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Plot 2, same as 1, but with RSS deviations
plot(Height~BHDiameter, main = "RSS Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Predict the values of height from diameter
yhat = fitted(spruce.lm)
# Find residual segments
with(spruce,{
segments(BHDiameter,Height,BHDiameter,yhat)
})
# Plot 3, the model sum of squares
plot(Height~BHDiameter, main = "MSS Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Make a naive model (the mean of heights)
with(spruce, abline(h=mean(Height)))
# Predict the values of height from diameter
yhat = fitted(spruce.lm)
# Make the explained deviations (explained by the model)
with(spruce, segments(BHDiameter,mean(Height),BHDiameter,yhat,col="Red"))
MSS=with(spruce,sum((yhat-mean(Height))^2))
MSS
# Plot 4, the total sum of squares
plot(Height~BHDiameter, main = "Justin Kleiber's Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
# Show the naive model (the mean of heights)
with(spruce, abline(h=mean(Height)))
with(spruce, segments(BHDiameter,Height,BHDiameter,mean(Height),col="Green"))
TSS=with(spruce, sum((Height-mean(Height))^2))
TSS
layout.show(4)
# Task 4
windows()
# Show four plots at once
layout(matrix(1:4,nr=2,nc=2,byrow=TRUE))
# Plot 1, the scatter plot with the fitted line
plot(Height~BHDiameter, main = "Plot with Fitted Line", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Plot 2, same as 1, but with RSS deviations
plot(Height~BHDiameter, main = "RSS Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Predict the values of height from diameter
yhat = fitted(spruce.lm)
# Find residual segments
with(spruce,{
segments(BHDiameter,Height,BHDiameter,yhat)
})
# Plot 3, the model sum of squares
plot(Height~BHDiameter, main = "MSS Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
abline(spruce.lm)
# Make a naive model (the mean of heights)
with(spruce, abline(h=mean(Height)))
# Predict the values of height from diameter
yhat = fitted(spruce.lm)
# Make the explained deviations (explained by the model)
with(spruce, segments(BHDiameter,mean(Height),BHDiameter,yhat,col="Red"))
MSS=with(spruce,sum((yhat-mean(Height))^2))
MSS
# Plot 4, the total sum of squares
plot(Height~BHDiameter, main = "Justin Kleiber's Plot", bg="Blue", pch=21, cex = 1.2, ylim=c(0,1.1*max(Height)), xlim=c(0,1.1*max(BHDiameter)), data=spruce)
# Show the naive model (the mean of heights)
with(spruce, abline(h=mean(Height)))
with(spruce, segments(BHDiameter,Height,BHDiameter,mean(Height),col="Green"))
TSS=with(spruce, sum((Height-mean(Height))^2))
TSS
# Summarizing the spruce linear model
summary(spruce.lm)
# Predict height for diameters of 15, 18, and 20 cm
predict(spruce.lm, 15)
# Predict height for diameters of 15, 18, and 20 cm
with(spruce, predict(Height, spruce.lm, 15))
# Predict height for diameters of 15, 18, and 20 cm
predict(spruce.lm, data.frame(BHDiameter = c(15, 18, 20)))
#Predict new HEAT values for RATIO values
predict(ht.lm, data.frame(RATIO=c(2,2.3,2.5)))
g=ggplot(spruce, aes(x=BHDiameter,y=Height,colour=BHDiameter))
g=g + geom_point() + geom_line() + geom_smooth(method="lm")
g + ggtitle("Height vs BHDiameter")
library(ggplot2)
g = ggplot(spruce, aes(x=BHDiameter,y=Height,colour=BHDiameter))
g = g + geom_point() + geom_line() + geom_smooth(method="lm")
g + ggtitle("Height vs BHDiameter")
windows()
library(ggplot2)
g = ggplot(spruce, aes(x=BHDiameter,y=Height,colour=BHDiameter))
g = g + geom_point() + geom_line() + geom_smooth(method="lm")
g + ggtitle("Height vs BHDiameter")
lfactorial(365-(1:n))
lfactorial(365-(1:20))
lfactorial(365) - lfactorial(365-(1:20))
library(s20x)
with(course.df, table(Degree, Gender))
library(s20x)
s20x::course.df
library(s20x)
with(course.df, table(Degree, Gender))
with(course.df{s20x}, table(Degree, Gender))
library(s20x)
course.df = data("course.df")
with(course.df, table(Degree, Gender))
data("course.df")
with(course.df, table(Degree, Gender))
tab = with(course.df, table(Degree, Gender))
colSums(tab)
rowSums(tab)
# Load the s20x library and make a lowess smoother scatter plot
library(s20x)
trendscatter(Height~BHDiameter, f = 0.5, data = spruce)
source('C:/Users/jklei/Google Drive/School/Fall 2019/MATH4573/Lab4/mylab4.R', echo=TRUE)
source('C:/Users/jklei/Google Drive/School/Fall 2019/MATH4573/Lab4/mylab4.R', echo=TRUE)
source('C:/Users/jklei/Google Drive/School/Fall 2019/MATH4573/Lab4/mylab4.R', echo=TRUE)
source('C:/Users/jklei/Google Drive/School/Fall 2019/MATH4573/Lab4/mylab4.R', echo=TRUE)
source('C:/Users/jklei/Google Drive/School/Fall 2019/MATH4573/Lab4/mylab4.R', echo=TRUE)
source('C:/Users/jklei/Google Drive/School/Fall 2019/MATH4573/Lab4/mylab4.R', echo=TRUE)
trendscatter(height.res~height.fit)
source('C:/Users/jklei/Google Drive/School/Fall 2019/MATH4573/Lab4/mylab4.R', echo=TRUE)
source('C:/Users/jklei/Google Drive/School/Fall 2019/MATH4573/Lab4/mylab4.R', echo=TRUE)
?normcheck
